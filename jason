--[[
 ______  ______   _____         _                
|  ____||  ____| / ____|       | |               
| |__   | |__   | (___    __ _ | | __ ___  _ __  
|  __|  |  __|   \___ \  / _` || |/ // _ \| '_ \ 
| |     | |____  ____) || (_| ||   <|  __/| | | |
|_|     |______||_____/  \__,_||_|\_\\___||_| |_|
       https://discord.gg/dM39KNvNj6

[CREDITS]:
// Melon - Scripted everything
// ZerX - Movement scripting (last part only, i edited it a bit)
// Emper - Reanimation
// Forsaken - Animations

[FREE] Fedora Rig:
// https://www.roblox.com/catalog/3033910400/International-Fedora-Germany
// https://www.roblox.com/catalog/3409612660/International-Fedora-USA
// https://www.roblox.com/catalog/3398308134/International-Fedora-Canada
// https://www.roblox.com/catalog/3033908130/International-Fedora-France
// https://www.roblox.com/catalog/4819740796/Robox

[PAID] Classic Rig:
// https://www.roblox.com/catalog/12344545199/Extra-Left-hand-moving-Blocky-white
// https://www.roblox.com/catalog/12344591101/Extra-Right-hand-moving-Blocky-white
// https://www.roblox.com/catalog/13779879140/Black-Fluffy-Fur-Body
// https://www.roblox.com/catalog/11263254795/Dummy-Head-For-Headless
// https://www.roblox.com/catalog/11159410305/Rectangle-Head-For-Headless

[PAID] Soldier Rig:
// https://www.roblox.com/catalog/139102413583361/Metal-Arm
// https://www.roblox.com/catalog/121830551276315/Prosthetic
// https://www.roblox.com/catalog/99726531005445/Black-Prosthetic-Metal-Arm-RIGHT
// https://www.roblox.com/catalog/18989526470/Black-Prosthetic-Metal-Arm-LEFT
// https://www.roblox.com/catalog/74295684215899/Emo-Black-Armored-Vest

// [PAID] Hats:
https://www.roblox.com/catalog/138480343439270/Two-Time-buddy
https://www.roblox.com/catalog/106118632964784/Jason-Vorhees-Machete-Area-51-Right
https://www.roblox.com/catalog/90928878496116/Jason

Find the others here:
// https://www.roblox.com/games/15541318313/Melons-Baseplate
]]

local Emotes = {
Emote1 = {
Image = "75402218293560",
ID = "93910549909381",
Name = "Eggrolled"
},
Emote2 = {
Image = "101388085235785",
ID = "134617723143543",
Name = "Gangnam Style"
},
Emote3 = {
Image = "127260772788474",
ID = "121768360244671",
Name = "California Girls"
},
Emote4 = {
Image = "124587965197013",
ID = "138019937280193",
Name = "Hakari Dance"
},
Emote5 = {
Image = "101388085235785",
ID = "108308837970067",
Name = "OppGangnam"
},
Emote6 = {
Image = "86125219137797",
ID = "100986631322204",
Name = "Miss The Quiet"
},
Emote7 = {
Image = "97057214315889",
ID = "126578888157845",
Name = "Brickbattler"
},
Emote8 = {
Image = "93387041641721",
ID = "115409995004952",
Name = "AI Cat Dance"
},
}

local script = game:GetObjects("rbxassetid://96403612951798")[1]
local AnimatorModule = loadstring(game:HttpGet("https://gist.githubusercontent.com/MelonsStuff/51f4829e57f3c5d5357f0be11d39d081/raw/dd06c57e154231594a3bf33388e1085d8554c1d7/JasonAnimator.lua"))()
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local Player = game.Players.LocalPlayer
local Character = game.Players.LocalPlayer.Character
local Humanoid = Character:FindFirstChildOfClass("Humanoid")
local RootPart = Character:FindFirstChild("HumanoidRootPart")
local Machete = script.Weapons:WaitForChild("Machete"):Clone()
Machete.Parent = Character
Machete.Transparency = 0
local Chainsaw = script.Weapons:WaitForChild("Chainsaw"):Clone()
Chainsaw.Parent = Character
Chainsaw.Transparency = 0
Character:FindFirstChild("Animate"):Destroy()
Humanoid:FindFirstChild("Animator"):Destroy()
Character:FindFirstChildOfClass("Humanoid").WalkSpeed = 7
local Animations = script.Animations
local Idle, Walking, Running = false, false, false
local CanSlash = false
local Debounce = false
local Shift = false
local Enraged = false
local Emoting = false
local GUI = script.UI:WaitForChild("TemporaryUI")
GUI.Parent = game.CoreGui
local EmoteFrame = GUI:WaitForChild("EmoteMenuHolder")
local EmoteRadial = EmoteFrame:WaitForChild("RadialMenu")
local RadialDial = EmoteRadial:WaitForChild("RadialDial")
local AbilityContainer = GUI:WaitForChild("AbilityContainer")
EmoteFrame.Visible = false
GUI.PlayerInfo.PlayerIcon.Image = "rbxthumb://type=AvatarHeadShot&id=" .. Player.UserId .. "&w=420&h=420"

local function CreateWeld(Parent, Part0, Part1)
local Weld = Instance.new("Weld")
Weld.Parent = Parent
Weld.Part0 = Part0
Weld.Part1 = Part1
end

local ChainsawWeld = script.Welds.Chainsaw:Clone()
ChainsawWeld.Parent = RootPart
ChainsawWeld.Part0 = RootPart
ChainsawWeld.Part1 = Chainsaw

local MacheteWeld = script.Welds.Machete:Clone()
MacheteWeld.Parent = RootPart
MacheteWeld.Part0 = RootPart
MacheteWeld.Part1 = Machete

local Dummy = script.Extras.NPC
for i, v in ipairs(Dummy:GetDescendants()) do
if v:IsA("Accessory") or v:IsA("Decal") or v:IsA("Shirt") or v:IsA("Pants") then
v:Destroy()
else if v:IsA("BasePart") and v.Name ~= "HumanoidRootPart" then
v.Transparency = 1
end
end
end

function PlayAnim(Rig, Animation, AnimFade, AnimSpeed)
if not AnimatorModule[Rig] then
AnimatorModule[Rig] = {}
end
if not AnimatorModule[Rig][Animation.Name] then
AnimatorModule[Rig][Animation.Name] = AnimatorModule:LoadAnimation(Rig, Animation)
end
for Animation, Track in next, AnimatorModule[Rig] do
if Animation ~= Animation.Name then
Track:Stop()
end
end
if not AnimatorModule[Rig][Animation.Name].IsPlaying then
AnimatorModule[Rig][Animation.Name]:Play(AnimFade or 1, AnimSpeed or 1)
end
end

function StopAnim(Rig, Anim)
if not AnimatorModule[Rig] then
AnimatorModule[Rig] = {}
end
if not AnimatorModule[Rig][Anim.Name] then
AnimatorModule[Rig][Anim.Name] = AnimatorModule:LoadAnimation(Rig, Anim)
end
AnimatorModule[Rig][Anim.Name]:Stop()
end

local function Execute()
if Debounce then return end
Debounce = true
local NPC = Dummy:Clone()
NPC.Parent = workspace
local NPCHumanoid = NPC:FindFirstChild("Humanoid")
local NPCRootPart = NPC:FindFirstChild("HumanoidRootPart")
NPCHumanoid.BreakJointsOnDeath = false
NPCRootPart.Anchored = true
RootPart.Anchored = true
NPCRootPart.CFrame = CFrame.lookAt(RootPart.Position + (RootPart.CFrame.LookVector * 2.5), RootPart.Position) * CFrame.new(-0.45, 0.45, -3.25) * CFrame.Angles(0, math.rad(180), 0)
PlayAnim(Character, Animations.ExecutionKiller, 0, 1)
PlayAnim(NPC, Animations.ExecutionPlayer, 0, 1)
task.wait(1.85)
NPC:Destroy()
RootPart.Anchored = false
Debounce = false
end

local function Gash()
if Debounce then return end
Debounce = true
local NPC = Dummy:Clone()
NPC.Parent = workspace
local NPCRootPart = NPC:FindFirstChild("HumanoidRootPart")
NPCRootPart.Anchored = true
RootPart.Anchored = true
NPCRootPart.CFrame = CFrame.lookAt(RootPart.Position + (RootPart.CFrame.LookVector * 2.5), RootPart.Position) * CFrame.new(0, 0, -3) * CFrame.Angles(0, math.rad(180), 0)
PlayAnim(Character, Animations.GashedKiller, 0, 2)
PlayAnim(NPC, Animations.GashedPlayer, 0, 2)
task.wait(2.95)
NPC:Destroy()
RootPart.Anchored = false
Debounce = false
end

local function ToggleRage()
if Debounce then return end
Enraged = not Enraged
Debounce = true
if Enraged then
PlayAnim(Character, Animations.Enrage, 0, 1)
task.wait(0.15)
task.wait(1)
Debounce = false
if RootPart.Velocity.Magnitude < 1 and workspace:FindPartOnRay(Ray.new(RootPart.Position, (CFrame.new(RootPart.Position, RootPart.Position + Vector3.new(0, -1, 0))).LookVector * 4), Character) then
Idle = true
Walking = false
Running = false
PlayAnim(Character, Animations.EnragedIdle, 0, 1)
elseif RootPart.Velocity.Magnitude > 1 and workspace:FindPartOnRay(Ray.new(RootPart.Position, (CFrame.new(RootPart.Position, RootPart.Position + Vector3.new(0, -1, 0))).LookVector * 4), Character) then
Idle = false
Walking = true
Running = false
PlayAnim(Character, Animations.EnragedWalk, 0, 1)
end	
else
Debounce = false
if RootPart.Velocity.Magnitude < 1 and workspace:FindPartOnRay(Ray.new(RootPart.Position, (CFrame.new(RootPart.Position, RootPart.Position + Vector3.new(0, -1, 0))).LookVector * 4), Character) then
Idle = true
Walking = false
Running = false
PlayAnim(Character, Animations.Idle, 0, 1)
elseif RootPart.Velocity.Magnitude > 1 and workspace:FindPartOnRay(Ray.new(RootPart.Position, (CFrame.new(RootPart.Position, RootPart.Position + Vector3.new(0, -1, 0))).LookVector * 4), Character) then
Idle = false
Walking = true
Running = false
PlayAnim(Character, Animations.Walk, 0, 1)
end	
end
end

local function Slash()
if Debounce then return end
Debounce = true
CanSlash = true
PlayAnim(Character, Animations.Swing, 0, 1)
task.wait(0.65)
Debounce = false
CanSlash = false
if RootPart.Velocity.Magnitude < 1 and workspace:FindPartOnRay(Ray.new(RootPart.Position, (CFrame.new(RootPart.Position, RootPart.Position + Vector3.new(0, -1, 0))).LookVector * 4), Character) then
Idle = true
Walking = false
Running = false
if Enraged then
PlayAnim(Character, Animations.EnragedIdle, 0, 1)
else
PlayAnim(Character, Animations.Idle, 0, 1)
end
elseif RootPart.Velocity.Magnitude > 1 and workspace:FindPartOnRay(Ray.new(RootPart.Position, (CFrame.new(RootPart.Position, RootPart.Position + Vector3.new(0, -1, 0))).LookVector * 4), Character) then
Idle = false
Walking = true
Running = false
if Enraged then
PlayAnim(Character, Animations.EnragedWalk, 0, 1)
else
PlayAnim(Character, Animations.Walk, 0, 1)
end
end 
end

local function Behead()
if Debounce then return end
Debounce = true
CanSlash = true
PlayAnim(Character, Animations.Behead, 0, 1)
task.wait(0.85)
Debounce = false
CanSlash = false
if RootPart.Velocity.Magnitude < 1 and workspace:FindPartOnRay(Ray.new(RootPart.Position, (CFrame.new(RootPart.Position, RootPart.Position + Vector3.new(0, -1, 0))).LookVector * 4), Character) then
Idle = true
Walking = false
Running = false
if Enraged then
PlayAnim(Character, Animations.EnragedIdle, 0, 1)
else
PlayAnim(Character, Animations.Idle, 0, 1)
end
elseif RootPart.Velocity.Magnitude > 1 and workspace:FindPartOnRay(Ray.new(RootPart.Position, (CFrame.new(RootPart.Position, RootPart.Position + Vector3.new(0, -1, 0))).LookVector * 4), Character) then
Idle = false
Walking = true
Running = false
if Enraged then
PlayAnim(Character, Animations.EnragedWalk, 0, 1)
else
PlayAnim(Character, Animations.Walk, 0, 1)
end
end
end

UserInputService.InputBegan:Connect(function(Key)
if Emoting and Key.KeyCode ~= Enum.KeyCode.G then return end
if Key.KeyCode == Enum.KeyCode.G then
Emoting = not Emoting
if Emoting then
EmoteFrame.Visible = true
TweenService:Create(EmoteFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Size = UDim2.new(0.5, 0, 0.5, 0)}):Play()
else
local CloseTween = TweenService:Create(EmoteFrame, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Size = UDim2.new(0.5, 0, 0, 0)})
CloseTween:Play()
CloseTween.Completed:Wait()
EmoteFrame.Visible = false
end
end
if Key.UserInputType == Enum.UserInputType.MouseButton1 then
Slash()
end
if Key.KeyCode == Enum.KeyCode.R then
ToggleRage()
end 
if Key.KeyCode == Enum.KeyCode.T then
Execute()
end 
if Key.KeyCode == Enum.KeyCode.E then
Gash()
end
if Key.KeyCode == Enum.KeyCode.Q then
Behead()
end 
if Key.KeyCode == Enum.KeyCode.LeftShift or Key.KeyCode == Enum.KeyCode.RightShift then
Shift = true
if Enraged == false then
Humanoid.WalkSpeed = 24
else
Humanoid.WalkSpeed = 35
end
end
end)

UserInputService.InputEnded:Connect(function(Key)
if Key.KeyCode == Enum.KeyCode.LeftShift or Key.KeyCode == Enum.KeyCode.RightShift then
Shift = false
if Enraged == false then
Humanoid.WalkSpeed = 8
else
Humanoid.WalkSpeed = 13
end
end
end)

AbilityContainer.Slash.MouseButton1Down:Connect(function()
Slash()
end)

AbilityContainer.Behead.MouseButton1Down:Connect(function()
Behead()
end)

AbilityContainer.RagingPace.MouseButton1Down:Connect(function()
ToggleRage()
end)

AbilityContainer.GashingWound.MouseButton1Down:Connect(function()
Gash()
end)

Machete.Touched:Connect(function(Hit)
if not CanSlash then return end
if Hit:IsDescendantOf(Character) then return end
local Target = Hit.Parent
local TargetHumanoid = Target:FindFirstChildOfClass("Humanoid")
if TargetHumanoid then
--Empyrean.Fling(Hit, DefaultFlingOptions)
end
end)

local function CreateAnimation(Name, ID)
local New = game:GetObjects("rbxassetid://"..ID)[1]
New.Parent = Animations
New.Name = Name
end

for i = 1, 8 do
local EmoteButton = EmoteRadial.Attach:FindFirstChild(tostring(i))
EmoteButton.Image =  "rbxassetid://" .. Emotes["Emote" .. i].Image
EmoteButton.MouseButton1Down:Connect(function()
if not Animations:FindFirstChild(Emotes["Emote" .. i].Name) then
CreateAnimation(Emotes["Emote" .. i].Name, Emotes["Emote" .. i].ID)
end
PlayAnim(Character, Animations:FindFirstChild(Emotes["Emote" .. i].Name), 0, 1)
end)
end

game:GetService("RunService").Heartbeat:Connect(function()
for i,v in pairs(Character:FindFirstChildOfClass("Humanoid"):GetPlayingAnimationTracks())do
v:Stop(0)
end
local MousePosition = UserInputService:GetMouseLocation() - game:GetService("GuiService"):GetGuiInset()
local DialCenter = RadialDial.AbsolutePosition + (RadialDial.AbsoluteSize / 2)
local Rotation = MousePosition - DialCenter
RadialDial.Rotation = math.deg(math.atan2(Rotation.Y, Rotation.X)) - 64
if Debounce then
StopAnim(Character,Animations.Idle)
StopAnim(Character,Animations.Walk)
StopAnim(Character,Animations.Run)
end
local HitFloor, HitPosition = workspace:FindPartOnRay(Ray.new(RootPart.Position, (CFrame.new(RootPart.Position, RootPart.Position + Vector3.new(0, -1, 0))).LookVector * 4), Character)
local TorsoVelocity = (RootPart.Velocity).Magnitude
local TorsoVerticalVelocity = RootPart.Velocity.Y
if TorsoVelocity < 1 and HitFloor ~= nil and Debounce == false then
if Idle == false then
Idle = true
PlayAnim(Character,Animations.Idle, 0, 1)
end
if Enraged == true and Idle == false then
Idle = true
PlayAnim(Character,Animations.EnragedIdle, 0, 1)
elseif Idle == false then
Idle = true
PlayAnim(Character,Animations.Idle, 0, 1)
end
Walking = false
Running = false
StopAnim(Character,Animations.Run)
StopAnim(Character,Animations.Walk)
elseif TorsoVelocity > 1 and HitFloor ~= nil and Debounce == false and Shift == true then
if Running == false then
Running = true
PlayAnim(Character,Animations.Run, 0, 1)
end
Idle = false
Walking = false
StopAnim(Character,Animations.Walk)
StopAnim(Character,Animations.Idle)
elseif TorsoVelocity > 1 and HitFloor ~= nil and Debounce == false then
if Enraged == true and Walking == false then
Walking = true
PlayAnim(Character, Animations.EnragedWalk, 0, 1)
elseif Walking == false then
Walking = true
PlayAnim(Character, Animations.Walk, 0, 1)
end
Idle = false
Running = false
StopAnim(Character,Animations.Run)
StopAnim(Character,Animations.Idle)
end
end)
